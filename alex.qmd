---
title: "University of Western Australia"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r setup}
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)


library(thematic)
thematic_rmd(bg="white", fg="black", accent="blue")

#source("R/plot-utils.R")


```

```{r include=FALSE}
s3 <- arrow::s3_bucket(bucket = "scores/parquet", endpoint_override = "s3.flare-forecast.org", anonymous = TRUE)

most_recent <-  arrow::open_dataset(s3) |> 
  filter(site_id == "ALEX") |> 
  summarize(max = max(reference_datetime)) |> 
  collect() |> 
  pull()

df_insitu_scores <- arrow::open_dataset(s3) |> 
  filter(variable == "temperature",
         depth %in% c(0.5, 5.0),
         site_id == "ALEX",
         reference_datetime == most_recent) |> 
  dplyr::collect()

```

## Most recent forecasts

This page was last updated on `r lubridate::with_tz(Sys.time(), tzone = "America/New_York")`

The most recent forecast is from `r lubridate::with_tz(lubridate::as_datetime(most_recent), tzone = "America/New_York")`.

::: panel-tabset
## Lake Alexandrina

```{r}
## date of each team's most recent forecast
df_insitu_scores |> 
  mutate(datetime = lubridate::with_tz(datetime, "America/New_York")) |> 
  ggplot(aes(x = datetime)) +
  geom_ribbon(aes(ymin = quantile10, ymax = quantile90), fill = "lightblue", color = "lightblue") +
  geom_line(aes(y = mean)) +
  geom_point(aes(y = observation)) +
  facet_wrap(~depth) +
  labs(y = "temperature") +
  theme_bw()
```

Past Performance

```{r}
df <- arrow::open_dataset(s3) |> 
  filter(variable == "temperature",
         depth %in% c(0.5),
         site_id == "ALEX") |> 
  dplyr::collect() 

bounds <- range(c(df$observation, df$mean), na.rm = TRUE)
  
  df |> 
  filter(horizon > 0) |> 
  ggplot(aes(x = observation, y = mean, color = factor(horizon))) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  ylim(bounds) +
  xlim(bounds) +
  labs(x = "observed", y = "predicted") +
  theme_bw()

```

```{r}
noaa_date <- as.character(lubridate::as_date("2022-11-20"))
s3 <- arrow::s3_bucket(bucket = "drivers/noaa/gefs-v12/stage2/parquet/0", endpoint_override = "s3.flare-forecast.org", anonymous = TRUE)
noaa_df <- arrow::open_dataset(s3, partitioning = "reference_date") |> 
  filter(variable == "air_temperature",
         reference_date == noaa_date,
         horizon <= 16 * 24, 
         site_id %in% c("ALEX")) |> 
  select(site_id, reference_datetime, datetime, family, parameter, variable, prediction) |> 
  dplyr::collect() |> 
  mutate(prediction = prediction - 273.15)


noaa_df |> ggplot(aes(x = datetime, y = prediction, group = parameter)) +
  geom_line() +
  labs(y = "NOAA GEFS air temperature") +
  theme_bw()
```
:::

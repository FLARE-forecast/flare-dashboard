---
title: "University of Western Australia"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r setup}
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)


library(thematic)
thematic_rmd(bg="white", fg="black", accent="blue")

#source("R/plot-utils.R")


```

## Most recent forecasts

Lake Alexandrina is located in South Australia and is monitored by the state water authority (SA Water).  The forecasts are generated in collaboration with Matt Hipsey's research group at the University of Western Australia. 

::: panel-tabset
## Lake Alexandrina

```{r}

s3 <- arrow::s3_bucket(bucket = "scores/parquet", endpoint_override = "s3.flare-forecast.org", anonymous = TRUE)

most_recent <-  arrow::open_dataset(s3) |> 
  filter(site_id == "ALEX") |> 
  summarize(max = max(reference_datetime)) |> 
  collect() |> 
  pull()

df_insitu_scores <- arrow::open_dataset(s3) |> 
  filter(variable == "temperature",
         depth %in% c(0.5, 5.0),
         site_id == "ALEX",
         reference_datetime == most_recent) |> 
  dplyr::collect()

```

The most recent forecast is from `r lubridate::with_tz(lubridate::as_datetime(most_recent), tzone = "America/New_York")` (Eastern U.S. time).

```{r}
## date of each team's most recent forecast
my_breaks <- lubridate::with_tz(seq(min(df_insitu_scores$datetime), max(df_insitu_scores$datetime), by = "1 day"),"America/New_York")   
my_label <- seq(lubridate::as_datetime(df_insitu_scores$reference_datetime)[1], max(df_insitu_scores$datetime), by = "5 days")
my_labels <- as.character(my_breaks)
my_labels[which(!(my_breaks %in% my_label))] <- " "

y_label <- expression(paste('Water temperature (',degree,'C)', sep = ""))
df_insitu_scores |> 
  dplyr::mutate(datetime = lubridate::with_tz(lubridate::as_datetime(datetime), "America/New_York"),
                reference_datetime = lubridate::with_tz(lubridate::as_datetime(reference_datetime), "America/New_York"),
                depth = paste0("Depth: ", depth)) |> 
  dplyr::filter(datetime >= reference_datetime) |> 
  ggplot(aes(x = datetime)) +
  geom_ribbon(aes(ymin = quantile10, ymax = quantile90), fill = "lightblue", color = "lightblue") +
  geom_line(aes(y = mean)) +
  #geom_point(aes(y = observation)) +
  #geom_vline(aes(xintercept = reference_datetime)) +
  scale_x_continuous(breaks = my_breaks, labels = my_labels) +
  facet_wrap(~depth) +
  labs(y = y_label) +
  ylim(c(-5,35)) +
  theme_bw() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=0.2)) +
  theme(text = element_text(size = 20))  
```



```{r eval = FALSE}
#Past Performance
df <- arrow::open_dataset(s3) |> 
  filter(variable == "temperature",
         depth %in% c(0.5),
         site_id == "ALEX") |> 
  dplyr::collect() 

bounds <- range(c(df$observation, df$mean), na.rm = TRUE)
  
  df |> 
  filter(horizon > 0) |> 
  ggplot(aes(x = observation, y = mean, color = factor(horizon))) +
  geom_point() +
  geom_abline(slope = 1, intercept = 0) +
  ylim(bounds) +
  xlim(bounds) +
  labs(x = "observed", y = "predicted") +
  theme_bw()

```

```{r eval = FALSE}
noaa_date <- as.character(lubridate::as_date("2022-11-20"))
s3 <- arrow::s3_bucket(bucket = "drivers/noaa/gefs-v12/stage2/parquet/0", endpoint_override = "s3.flare-forecast.org", anonymous = TRUE)
noaa_df <- arrow::open_dataset(s3, partitioning = "reference_date") |> 
  filter(variable == "air_temperature",
         reference_date == noaa_date,
         horizon <= 16 * 24, 
         site_id %in% c("ALEX")) |> 
  select(site_id, reference_datetime, datetime, family, parameter, variable, prediction) |> 
  dplyr::collect() |> 
  mutate(prediction = prediction - 273.15)


noaa_df |> ggplot(aes(x = datetime, y = prediction, group = parameter)) +
  geom_line() +
  labs(y = "NOAA GEFS air temperature") +
  theme_bw()
```
:::

---
title: "Terrestrial"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r setup}
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)
library(thematic)
#library(bslib)
#bslib::theme_bootswatch("lux")
thematic_rmd(bg="white", fg="black", accent="blue")

source("R/plot-utils.R")

```

```{r}
dashboard <- yaml::read_yaml("dashboard.yml")
```

# Daily averages

```{r }
combined <- combined_scores("terrestrial_daily") |> 
  filter(time > dashboard$start_time)
```

## Most recent forecasts

Below is the latest forecasts for which we have at least 15 observations. Mouse over to see the team id, scroll to zoom.

```{r}
day <- combined |>
  filter(!is.na(observed)) |>
  count(target_id, variable, model_id, pub_time, site_id) |>
  filter(n > 15) |> 
  # at least 15 data points
  filter(pub_time == max(pub_time)) |> # must happen second
  select(pub_time) |> distinct(pub_time) |> first()
```

```{r}

plotme <- function(df) {
  ggobj <- 
    ggplot(df) +
    geom_point(aes(time, observed)) + 
    geom_ribbon_interactive(aes(x = time, ymin = quantile02.5, ymax = quantile97.5,
                                fill = model_id, data_id = model_id, tooltip = model_id),
                            alpha = 0.2, show.legend=FALSE) +
    geom_line_interactive(aes(time, mean, col = model_id, 
                              tooltip = model_id, data_id = model_id), show.legend=FALSE) +
    facet_wrap(~site_id, scales = "free", ncol=5) +
    theme(axis.text.x = element_text( angle = 90, hjust = 0.5, vjust = 0.5)) + 
    theme_bw()
    
  
  girafe(ggobj = ggobj,
       width_svg = 8, height_svg = 4,
  options = list(
    opts_hover_inv(css = "opacity:0.20;"),
    opts_hover(css = "stroke-width:2;"),
    opts_zoom(max = 4)
  ))

}
```

## Leaderboard (daily averages)

::: {.panel-tabset}

## Latent evaporation

```{r}
combined |> filter(pub_time == day, variable == "le") |> forecast_plots()
```

## CO2 Flux

Net ecosystem exchange of CO2 (NEE) 


```{r}
combined |> filter(pub_time == day, variable == "nee") |> forecast_plots()
```

## vswc 

No data

```{r}
combined |> filter(variable == "vswc", !is.na(observed))
```

:::


```{r}
filled_scores <- fill_scores(combined, null_model = "persistence")
```

```{r}
leaderboard <-  filled_scores |> 
  group_by(variable, model_id) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps_model)),
            .groups = "drop")
```

```{r}
by_start <-  filled_scores |> 
  group_by(variable, model_id, start_time, site_id) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps_model)),
            .groups = "drop")

```


::: {.panel-tabset}

## Latent evaporation

```{r}
leaderboard_plots(leaderboard, NULL, "le")
```

## CO2 flux

```{r}
leaderboard_plots(leaderboard, NULL, "nee")
```

## vswc

(no data)

:::

Overall team rankings by forecast skill. Lower values indicate better predictions. Both score probabilistic forecasts, but log skill penalizes observations outside expected range much more heavily. **Tip**: *Mouse over a color to highlight the scores of one a team*


----------------


# 30 Minute averages

```{r }
combined <- combined_scores("terrestrial_30min") |> 
  filter(time > dashboard$start_time)
```


## Most recent forecasts

Below is the latest forecasts for which we have at least 15 observations. Mouse over to see the team id, scroll to zoom.

```{r}
day <- combined |>
  filter(!is.na(observed)) |>
  count(target_id, variable, model_id, pub_time, site_id) |>
  filter(n > 100) |> 
  # at least 15 data points
  filter(pub_time == max(pub_time)) |> # must happen second
  select(pub_time) |> distinct(pub_time) |> first()

end <- as.Date(day) + 4
```



::: {.panel-tabset}

## Latent evaporation

```{r}
combined |> filter(pub_time == day, variable == "le", time < end) |> forecast_plots(ncol=3)
```

## CO2 Flux

Net ecosystem exchange of CO2 (NEE) 


```{r}
combined |> filter(pub_time == day, variable == "nee", time < end) |> forecast_plots()
```

## vswc 

No data

```{r}
combined |> filter(variable == "vswc", !is.na(observed))
```

:::


```{r}
combined |> count(model_id)

filled_scores <- fill_scores(combined, null_model = "climatology")
```

```{r}
leaderboard <-  filled_scores |> 
  group_by(variable, model_id) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps_model)),
            .groups = "drop")
```

```{r}
by_start <-  filled_scores |> 
  group_by(variable, model_id, start_time, site_id) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps_model)),
            .groups = "drop")

```


::: {.panel-tabset}

## Latent evaporation

```{r}
leaderboard_plots(leaderboard, NULL, "le")
```

## CO2 flux

```{r}
leaderboard_plots(leaderboard, NULL, "nee")
```

## vswc

(no data)

:::

Overall team rankings by forecast skill. Lower values indicate better predictions. Both score probabilistic forecasts, but log skill penalizes observations outside expected range much more heavily. **Tip**: *Mouse over a color to highlight the scores of one a team*
























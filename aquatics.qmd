---
title: "Aquatics"
---

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
```

```{r setup}
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)
library(thematic)
thematic_rmd(bg="white", fg="black", accent="blue")

```

```{r include=FALSE}
dashboard <- yaml::read_yaml("dashboard.yml") # Some configurable options

combined <- neon4cast::combined_scores("aquatics") |>
  filter(time >= lubridate::as_datetime(dashboard$start_time))
```


## Most recent forecasts

Below is the latest forecasts for which we have at least 15 observations. Mouse over to see the team id, scroll to zoom.

```{r}
day <- combined |>
  filter(!is.na(observed)) |>
  count(target_id, variable, model_id, pub_time, site_id) |>
  filter(n > 15) |> 
  # at least 15 data points
  filter(pub_time == max(pub_time)) |> # must happen second
  select(pub_time) |> distinct(pub_time) |> first()
```

```{r}

plotme <- function(df) {
  ggobj <- 
    ggplot(df) +
    geom_point(aes(time, observed)) + 
    geom_ribbon_interactive(aes(x = time, ymin = quantile02.5, ymax = quantile97.5,
                                fill = model_id, data_id = model_id, tooltip = model_id),
                            alpha = 0.2, show.legend=FALSE) +
    geom_line_interactive(aes(time, mean, col = model_id, 
                              tooltip = model_id, data_id = model_id), show.legend=FALSE) +
    facet_wrap(~site_id, scales = "free") +
    labs(y = "greenness index (gcc 90)") +
    theme(axis.text.x = element_text( angle = 90, hjust = 0.5, vjust = 0.5)) + 
    theme_bw()
    
  
  girafe(ggobj = ggobj,
       width_svg = 8, height_svg = 4,
  options = list(
    opts_hover_inv(css = "opacity:0.20;"),
    opts_hover(css = "stroke-width:2;"),
    opts_zoom(max = 4)
  ))

}
```


::: {.panel-tabset}

## Oxygen

```{r}
combined |> filter(pub_time == day, variable == "oxygen") |> plotme()
```

## Temperature

```{r}
combined |> filter(pub_time == day, variable == "temperature") |> plotme()
```

## Chlorophyll-A 

```{r}
combined |> filter(pub_time == day, variable == "chla") |> plotme()
```

:::






```{r}
# no persistence submissions...
filled_scores <- score4cast::fill_scores(combined, "climatology")
```

```{r}
leaderboard <-  filled_scores |> 
  group_by(variable, model_id) |>
  summarise(crps = mean(crps, na.rm=T),
            logs = mean(logs, na.rm=T),
            percent_na = mean(is.na(crps_model)),
            .groups = "drop") 
```

<!-- Heading 1: navbar -->

```{r}

plotme2 <- function(var = "oxygen") {
board1 <- 
leaderboard |> 
  filter(variable == var) |>
  mutate(model_id = fct_rev(fct_reorder(model_id, crps))) |>   # sort by score 
  pivot_longer(cols = c(crps, logs), names_to="metric", values_to="score") |>
  ggplot(aes(model_id, score, fill=model_id, col=model_id)) + 
  geom_col_interactive(aes(tooltip = model_id, data_id = model_id), show.legend = FALSE) + 
  coord_flip() +
  facet_wrap(~metric, scales = "free_y") + 
  theme(axis.ticks.x = element_blank(),
        axis.text.x = element_blank()) + 
  theme_bw()

by_start <-  filled_scores |> 
  filter(variable == var)  |> 
  group_by(variable, model_id, start_time, site_id) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps_model))) |> 
  arrange(crps)

board2 <- 
  by_start |> 
  filter(percent_na < .01) |>
  ggplot(aes(start_time, crps, col=model_id)) + 
    geom_point_interactive(aes(tooltip = model_id, data_id = model_id), size=2, show.legend = FALSE) +
    geom_line_interactive(aes(tooltip = model_id, data_id = model_id), size=1, show.legend = FALSE) + 
  facet_wrap(~site_id)

ggob <- board1 / board2 # patchwork stack
girafe(ggobj = ggob,
       width_svg = 8, height_svg = 4,
  options = list(
    opts_hover_inv(css = "opacity:0.20;"),
    opts_hover(css = "stroke-width:2;"),
    opts_zoom(max = 4)
  ))

}
```


::: {.panel-tabset}

## Oxygen

```{r}
plotme2("oxygen")
```

## Temperature

```{r}
plotme2("temperature")
```

## Chlorophyll-A 

```{r}
plotme2("chla")
```

:::

------------------------------------------------------------------------

Overall team rankings by forecast skill, as well as skill by date of initial forecast.

**Top plots**: Forecast skill measured by CRPS and log skill. Lower values indicate better predictions. Both score probabilistic forecasts, but log skill penalizes observations outside expected range much more heavily.

**Lower plot**: Forecast skill over time at each site. Not all teams submit multiple forecasts.

**Tip**: *Mouse over a color to highlight the scores of one a team*

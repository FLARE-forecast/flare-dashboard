---
title: "Weather"
---

As a reference case, we can compare the NOAA [Global Ensemble Forecast System (GEFS)](https://www.ncei.noaa.gov/products/weather-climate-models/global-ensemble-forecast) predictions to measurements made on the ground at individual NEON sites using the EFI standard and cyberinfrastructure tools. Keep in mind these are not the usual NOAA forecasts you see in daily life, GEFS are: 31 ensemble models at 1.0 degree lat/long squares resolution that extend a full 30 days in the future. We sample these at the NEON sites and compare to NEON measurements.

```{r, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message=FALSE, warning=FALSE)
knitr::opts_chunk$set(eval=FALSE)
```

```{r setup}
library(ggiraph)
library(patchwork)
library(tidyverse)
library(neon4cast)
library(score4cast)


library(thematic)
thematic_rmd(bg="white", fg="black", accent="blue")
source("R/plot-utils.R")
dashboard <- yaml::read_yaml("dashboard.yml") # Some configurable options

```

```{r}
# So far we use scores of RH only.
# See R/score_noaa.R to generate updated scores files for RH
s3 <- arrow::s3_bucket("neon4cast-scores/noaa", endpoint_override="data.ecoforecast.org")
combined <- arrow::open_dataset(s3$path("RH")) |> 
  mutate(model_id = "noaa_gefs") |> 
  mutate(start_time = start_time, target_id = "weather") |>
  collect()
```

## Most recent forecasts

Below is the latest forecasts for which we have at least 15 observations. Mouse over to see the team id, scroll to zoom.

```{r}
day <- combined |>
  filter(!is.na(observed)) |>
  count(target_id, variable, model_id, start_time, site_id) |>
  filter(n > 50) |> 
  # at least 15 data points
  filter(start_time == max(start_time)) |> # must happen second
  select(start_time) |> distinct(start_time) |> first()
```

## Relative Humidity

::: panel-tabset
```{r}
sites <- combined |> distinct(site_id) |> pull(site_id)

richness <- combined |> filter(start_time == day, variable == "RH")
```

## Sites 1 - 8

```{r}
richness |>  filter(site_id %in% sites[1:8]) |> forecast_plots(ncol=4)
```

## 9 - 16

```{r}
richness |> filter(site_id %in% sites[9:16]) |> forecast_plots(ncol=4)
```

## 17 - 24

```{r}
richness |>  filter(site_id %in% sites[17:24]) |> forecast_plots(ncol=4)
```

## 25 - 32

```{r}
richness |> filter(site_id %in% sites[25:32]) |> forecast_plots(ncol=4)
```

## 33 - 40

```{r}
richness |>  filter(site_id %in% sites[33:40]) |> forecast_plots(ncol=4)
```

## 41 - 47

```{r}
richness |> filter(site_id %in% sites[41:47]) |> forecast_plots(ncol=4)
```

## 48 - 56

```{r}
richness |> filter(site_id %in% sites[48:56]) |> forecast_plots(ncol=4)
```
:::

## Skill Scores over time

```{r}
horizon <-  combined |> filter(!is.na(crps)) |> 
  mutate(horizon = as.numeric(time - start_time, units="hours")) |>
  group_by(variable, model_id, horizon) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps))) |> 
  arrange(crps)

horizon |> 
  ggplot(aes(horizon, crps, col=model_id)) + 
  geom_point_interactive(aes(tooltip = model_id, data_id = model_id), size=1, show.legend = FALSE)  +
  labs(title = "Average forecast skill by horizon", xlab = "horizon (hours)") +
  theme_bw()


```

## Average skill by start date

```{r}
by_start <-  combined |> filter(!is.na(crps)) |>
  group_by(variable, model_id, start_time) |>
  summarise(crps = mean(crps),
            logs = mean(logs),
            percent_na = mean(is.na(crps))) |> 
  arrange(crps)

 
by_start |> 
  ggplot(aes(start_time, crps, col=model_id)) + 
  geom_line_interactive(aes(tooltip = model_id, data_id = model_id), size=1, show.legend = FALSE)  +
  labs(title = "Average forecast skill by start date") +
  theme_bw()


```
